#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
   time-to-max-speed-ms = <100>; // Pretty understandable
   acceleration-exponent=<2>; // if 0 it always goes at max speed, otherwise higher exponent more quickly it reaches max speed

    /*
     *if (duration_ms > config->time_to_max_speed_ms || config->time_to_max_speed_ms == 0 ||
     *       config->acceleration_exponent == 0) {
     *       return max_speed;
     *   }
     *   float time_fraction = (float)duration_ms / config->time_to_max_speed_ms;
     *   return max_speed * powf(time_fraction, config->acceleration_exponent);
     *   The exponent is usually set to 0 for constant speed, 1 for uniform acceleration or 2 for uniform jerk.
    */
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <43 48>;
            bindings = <&sl 2>;
        };
    };
};

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  Q  |  W  |  F   |  P   |  T   |                                          |  J   |  L    |  U    |  Y   | BKSPC |  //  |
            // |  A  |  R  |  S   |  T   |  G   |                                          |  M   |  N    |  E    |  I   |   O   |  //  |
            // |  Z  |  X  |  C   |  D   |  V   |  //  |  //  |              |  //  |  //  |  K   |  H    |  /    |  .   |   ,   |  //  |
            //                     | //  | //  | LYR  |  SHIFT  |  ESC  |    |  RET  |  CTRL  | TAB  | //  | // |

            bindings = <
&none  &kp Q  &kp W  &kp F  &kp P  &kp B                                                      &kp J      &kp L  &kp U     &kp Y    &bspc_del   &none
&none  &kp A  &kp R  &hm LGUI S  &hm LALT T  &kp G                                            &hm LGUI M  &hm LALT N  &kp E     &kp I    &kp O      &none
&none  &kp Z  &kp X  &kp C  &kp D  &kp V  &none           &none      &none  &none             &kp K      &kp H  &kp FSLH  &kp DOT  &kp COMMA  &none
                     &none  &none  &to 1  &kp LSHFT  &kp ESC  &kp ENTER  &kp LCTRL  &mt LC(LS(LALT)) SPC  &none  &none
            >;
        };

        functional_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  Q  |  W  |  F   |  P   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |  //  |
            // |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |  //  |
            // |  Z  |  X  |  C   |  D   |  V   |  //  |  //  |              |  //  |  //  |  N   |  M    |  ,    |  .   |   /   |  //  |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&trans  &kp N0 &kp N7  &kp N8  &kp N9  &mkp MB2                                          &msc SCRL_RIGHT &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &trans &trans 
&trans  &kp N0 &kp N4  &kp N5  &kp N6 &mkp MB1                                  &trans &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans 
&trans  &kp N5 &kp N1 &kp N2  &kp N3  &trans  &trans  &trans                       &trans  &trans  &trans  &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT  &trans
                                    &trans  &trans  &to 2  &trans  &trans                              &trans  &trans  &to 0  &trans  &trans
            >;
        };

        symbol_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  Q  |  W  |  F   |  P   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |  //  |
            // |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |  //  |
            // |  Z  |  X  |  C   |  D   |  V   |  //  |  //  |              |  //  |  //  |  N   |  M    |  ,    |  .   |   /   |  //  |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&trans  &trans   &kp AMPS  &kp NUBS  &kp EXCL  &kp HASH                                       &kp QMARK &kp SEMI  &kp LT   &kp GT   &trans   &trans
&trans  &kp EQUAL &kp ATSN  &hm LGUI PIPE  &hm LALT DQT   &kp SQT                                        &kp UNDER &hm LALT CARET &hm LGUI LBRC &kp RBRC &kp DLLR &trans
&trans  &to 3     &td GRAVE TILDE &kp STAR &kp MINUS &kp PLUS &trans    &trans      &trans  &trans  &kp PRCNT &kp LBKT  &kp LPRN &kp RPRN &kp RBKT &trans
                            &trans    &trans    &to 1    &trans  &trans      &trans  &trans  &to 0     &trans    &trans
            >;
        };


        f_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  Q  |  W  |  F   |  P   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |  //  |
            // |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |  //  |
            // |  Z  |  X  |  C   |  D   |  V   |  //  |  //  |              |  //  |  //  |  N   |  M    |  ,    |  .   |   /   |  //  |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                               &kp F15  &kp F16  &kp F17  &kp F18  &kp F19  &trans
&trans  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9                                &kp F20  &kp F21  &kp F22  &kp F23  &kp F24  &trans
&trans  &kp F10  &kp F11  &kp F12  &kp F13  &kp F14  &trans  &trans      &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &trans
                         &to 5  &trans   &to 2  &trans  &trans          &trans  &trans  &to 0  &trans  &trans
            >;

            label = "num";
        };


        bluetooth_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&none  &none         &none         &none         &none         &none                                     &none       &none  &none  &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                              &bt BT_CLR  &none  &none  &none  &none  &none
&none  &none         &none         &none         &none         &none         &none  &none  &none  &none  &none       &none  &none  &none  &none  &none
                                   &none         &none         &none         &none  &none  &none  &none  &to 0       &none  &none
            >;

            label = "bt";
        };

        gaming_layer {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E   &kp R   &kp T                                         &kp Y   &kp U   &kp I      &kp O    &kp P    &kp LBRC
&kp MINUS  &kp A  &kp S  &kp D   &kp F   &kp G                                         &kp H   &kp J   &kp K      &kp L    &kp SEMI &kp RBRC
&kp BSLH   &kp Z  &kp X  &kp C   &kp V   &kp B  &none      &trans   &trans  &trans     &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH &kp SQT
                         &to 0  &trans  &kp LALT  &kp LSHFT  &kp TAB  &trans  &trans  &kp SPACE  &trans  &trans
            >;
        };
    };
};
