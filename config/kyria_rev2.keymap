#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
   time-to-max-speed-ms = <680>;
   acceleration-exponent=<2>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  //  |  Q  |  W  |  F   |  P   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  //  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // |  //  |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&none  &kp Q  &kp W  &kp F  &kp P  &kp B                                                      &kp J      &kp L  &kp U     &kp Y    &kp BSPC    &none
&none  &kp A  &kp R  &kp S  &kp T  &kp G                                                      &kp M      &kp N  &kp E     &kp I    &kp O      &none
&none  &kp Z  &kp X  &kp C  &kp D  &kp V  &none           &none      &none  &none             &kp K      &kp H  &kp FSLH  &kp DOT  &kp COMMA  &none
                     &none  &none  &to 1  &kp LSHFT  &kp ENTER  &none  &kp LCTRL  &kp SPACE  &none  &none
            >;
        };

        symbol_layer {
            bindings = <
&trans  &kp ESC &kp AMPS &kp NUBS &kp EXCL &kp HASH                                 &kp QMARK &kp SEMI  &kp LT &kp GT &trans  &trans
&trans  &kp EQUAL &kp ATSN &kp PIPE &kp DQT &kp SQT                                 &kp UNDER  &kp CARET &kp LBRC  &kp RBKT  &kp DLLR  &trans
&trans  &to 2  &kp GRAVE &kp TILDE &kp MINUS &kp PLUS &trans  &trans  &trans  &trans  &kp PRCNT &kp LBKT &kp LPRN &kp RPRN &kp RBKT   &trans
                        &trans  &trans  &to 3  &kp LALT  &trans  &trans  &trans  &to 1  &trans    &trans
            >;
        };

        functional_layer {
            bindings = <
&trans  &trans  &msc SCROLL_LEFT  &mmv MOVE_UP  &msc SCROLL_RIGHT  &msc SCROLL_UP                                  &kp   &kp   &kp   &kp    &kp    &trans 
&trans  &trans  &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &msc SCROLL_DOWN                                  &kp   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans 
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        number_layer {
            bindings = <
&trans  &kp ESC  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                                  &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0                                  &kp N0  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
                                    &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "num";
        };


        bluetooth_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&none  &none         &none         &none         &none         &none                                     &none       &none  &none  &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                              &bt BT_CLR  &none  &none  &none  &none  &none
&none  &none         &none         &none         &none         &none         &none  &none  &none  &none  &none       &none  &none  &none  &none  &none
                                   &none         &none         &none         &none  &none  &none  &none  &none       &none  &none
            >;

            label = "bt";
        };

        gaming_layer {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E   &kp R   &kp APOS                                         &kp T   &kp Y   &kp U   &kp I      &kp O    &kp P
&kp MINUS  &kp A  &kp S  &kp D   &kp F   &kp LBKT                                         &kp G   &kp H   &kp J   &kp K      &kp L    &kp SEMI
&kp BSLH   &kp Z  &kp X  &kp C   &kp V   &kp RBKT  &none      &trans   &trans  &trans     &kp B   &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH
                         &trans  &trans  &kp LALT  &kp LSHFT  &kp TAB  &trans  &kp SPACE  &trans  &trans  &trans
            >;
        };
    };
};
